name: Build and Push Docker Image to ECR
on: 

    workflow_dispatch:
        inputs: 
            confirmation:
                description: 'type yes to confirm'
                required: true
                default: 'no'
                
                
  
jobs:
  build:
   
  
    name: Build Docker Image
    runs-on: ubuntu-latest  
    steps:  
        - name: Checkout code
          uses: actions/checkout@v2  
        
          
        - name: Abort if Not Confirmed
          if: ${{ github.event.inputs.confirmation != 'yes' }}  # Runs for any input other than 'yes'
          
          run: |
            echo "Workflow is aborted because you did not say 'yes'."
            exit 1 # Exit with a non-zero status to fail the job
          
        
        
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}


        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v1
          

        - name: Build Docker image
          env:
            ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
            IMAGE_TAG: GHA
          run: |
            cd ./app
            docker build --no-cache -t $ECR_REPOSITORY:$IMAGE_TAG .



        - name: scan image for vulnerabilities
          id: scan-image
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: ${{ secrets.AWS_ECR_REPO }}:GHA
            format: 'table'
            exit-code: '1' # fail the job if vulnerabilities are found
            severity: 'HIGH,CRITICAL' # only show high and critical vulnerabilities

            

        - name: Push Docker image to Amazon ECR
          env:
            ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
            IMAGE_TAG: GHA
          run: |
            docker push $ECR_REPOSITORY:$IMAGE_TAG
            echo "Docker image pushed to ECR: $ECR_REPOSITORY:$IMAGE_TAG"